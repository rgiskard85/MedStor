//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DomainWebServices.OrderMgmtReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="meds", Namespace="http://schemas.datacontract.org/2004/07/UtilityWebServices")]
    [System.SerializableAttribute()]
    public partial class meds : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int amountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int med_idField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int amount {
            get {
                return this.amountField;
            }
            set {
                if ((this.amountField.Equals(value) != true)) {
                    this.amountField = value;
                    this.RaisePropertyChanged("amount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int med_id {
            get {
                return this.med_idField;
            }
            set {
                if ((this.med_idField.Equals(value) != true)) {
                    this.med_idField = value;
                    this.RaisePropertyChanged("med_id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Order", Namespace="http://schemas.datacontract.org/2004/07/UtilityWebServices")]
    [System.SerializableAttribute()]
    public partial class Order : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string complete_dateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string create_dateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int order_idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string statusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string surnameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string complete_date {
            get {
                return this.complete_dateField;
            }
            set {
                if ((object.ReferenceEquals(this.complete_dateField, value) != true)) {
                    this.complete_dateField = value;
                    this.RaisePropertyChanged("complete_date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string create_date {
            get {
                return this.create_dateField;
            }
            set {
                if ((object.ReferenceEquals(this.create_dateField, value) != true)) {
                    this.create_dateField = value;
                    this.RaisePropertyChanged("create_date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int order_id {
            get {
                return this.order_idField;
            }
            set {
                if ((this.order_idField.Equals(value) != true)) {
                    this.order_idField = value;
                    this.RaisePropertyChanged("order_id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string status {
            get {
                return this.statusField;
            }
            set {
                if ((object.ReferenceEquals(this.statusField, value) != true)) {
                    this.statusField = value;
                    this.RaisePropertyChanged("status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string surname {
            get {
                return this.surnameField;
            }
            set {
                if ((object.ReferenceEquals(this.surnameField, value) != true)) {
                    this.surnameField = value;
                    this.RaisePropertyChanged("surname");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="OrderMgmtReference.IOrderMgmt")]
    public interface IOrderMgmt {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderMgmt/InsertOrder", ReplyAction="http://tempuri.org/IOrderMgmt/InsertOrderResponse")]
        int InsertOrder(int user_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderMgmt/InsertOrder", ReplyAction="http://tempuri.org/IOrderMgmt/InsertOrderResponse")]
        System.Threading.Tasks.Task<int> InsertOrderAsync(int user_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderMgmt/InsertOrdMed", ReplyAction="http://tempuri.org/IOrderMgmt/InsertOrdMedResponse")]
        int InsertOrdMed(System.Collections.Generic.Dictionary<int, int> medList, int order_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderMgmt/InsertOrdMed", ReplyAction="http://tempuri.org/IOrderMgmt/InsertOrdMedResponse")]
        System.Threading.Tasks.Task<int> InsertOrdMedAsync(System.Collections.Generic.Dictionary<int, int> medList, int order_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderMgmt/CompleteOrder", ReplyAction="http://tempuri.org/IOrderMgmt/CompleteOrderResponse")]
        int CompleteOrder(int order_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderMgmt/CompleteOrder", ReplyAction="http://tempuri.org/IOrderMgmt/CompleteOrderResponse")]
        System.Threading.Tasks.Task<int> CompleteOrderAsync(int order_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderMgmt/GetOrdMed", ReplyAction="http://tempuri.org/IOrderMgmt/GetOrdMedResponse")]
        DomainWebServices.OrderMgmtReference.meds[] GetOrdMed(int order_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderMgmt/GetOrdMed", ReplyAction="http://tempuri.org/IOrderMgmt/GetOrdMedResponse")]
        System.Threading.Tasks.Task<DomainWebServices.OrderMgmtReference.meds[]> GetOrdMedAsync(int order_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderMgmt/DeleteOrder", ReplyAction="http://tempuri.org/IOrderMgmt/DeleteOrderResponse")]
        int DeleteOrder(int order_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderMgmt/DeleteOrder", ReplyAction="http://tempuri.org/IOrderMgmt/DeleteOrderResponse")]
        System.Threading.Tasks.Task<int> DeleteOrderAsync(int order_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderMgmt/DeleteOrderUser", ReplyAction="http://tempuri.org/IOrderMgmt/DeleteOrderUserResponse")]
        int DeleteOrderUser(int user_id, int order_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderMgmt/DeleteOrderUser", ReplyAction="http://tempuri.org/IOrderMgmt/DeleteOrderUserResponse")]
        System.Threading.Tasks.Task<int> DeleteOrderUserAsync(int user_id, int order_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderMgmt/GetOrderList", ReplyAction="http://tempuri.org/IOrderMgmt/GetOrderListResponse")]
        DomainWebServices.OrderMgmtReference.Order[] GetOrderList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderMgmt/GetOrderList", ReplyAction="http://tempuri.org/IOrderMgmt/GetOrderListResponse")]
        System.Threading.Tasks.Task<DomainWebServices.OrderMgmtReference.Order[]> GetOrderListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderMgmt/GetUserOrderList", ReplyAction="http://tempuri.org/IOrderMgmt/GetUserOrderListResponse")]
        DomainWebServices.OrderMgmtReference.Order[] GetUserOrderList(int user_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderMgmt/GetUserOrderList", ReplyAction="http://tempuri.org/IOrderMgmt/GetUserOrderListResponse")]
        System.Threading.Tasks.Task<DomainWebServices.OrderMgmtReference.Order[]> GetUserOrderListAsync(int user_id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IOrderMgmtChannel : DomainWebServices.OrderMgmtReference.IOrderMgmt, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class OrderMgmtClient : System.ServiceModel.ClientBase<DomainWebServices.OrderMgmtReference.IOrderMgmt>, DomainWebServices.OrderMgmtReference.IOrderMgmt {
        
        public OrderMgmtClient() {
        }
        
        public OrderMgmtClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public OrderMgmtClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public OrderMgmtClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public OrderMgmtClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int InsertOrder(int user_id) {
            return base.Channel.InsertOrder(user_id);
        }
        
        public System.Threading.Tasks.Task<int> InsertOrderAsync(int user_id) {
            return base.Channel.InsertOrderAsync(user_id);
        }
        
        public int InsertOrdMed(System.Collections.Generic.Dictionary<int, int> medList, int order_id) {
            return base.Channel.InsertOrdMed(medList, order_id);
        }
        
        public System.Threading.Tasks.Task<int> InsertOrdMedAsync(System.Collections.Generic.Dictionary<int, int> medList, int order_id) {
            return base.Channel.InsertOrdMedAsync(medList, order_id);
        }
        
        public int CompleteOrder(int order_id) {
            return base.Channel.CompleteOrder(order_id);
        }
        
        public System.Threading.Tasks.Task<int> CompleteOrderAsync(int order_id) {
            return base.Channel.CompleteOrderAsync(order_id);
        }
        
        public DomainWebServices.OrderMgmtReference.meds[] GetOrdMed(int order_id) {
            return base.Channel.GetOrdMed(order_id);
        }
        
        public System.Threading.Tasks.Task<DomainWebServices.OrderMgmtReference.meds[]> GetOrdMedAsync(int order_id) {
            return base.Channel.GetOrdMedAsync(order_id);
        }
        
        public int DeleteOrder(int order_id) {
            return base.Channel.DeleteOrder(order_id);
        }
        
        public System.Threading.Tasks.Task<int> DeleteOrderAsync(int order_id) {
            return base.Channel.DeleteOrderAsync(order_id);
        }
        
        public int DeleteOrderUser(int user_id, int order_id) {
            return base.Channel.DeleteOrderUser(user_id, order_id);
        }
        
        public System.Threading.Tasks.Task<int> DeleteOrderUserAsync(int user_id, int order_id) {
            return base.Channel.DeleteOrderUserAsync(user_id, order_id);
        }
        
        public DomainWebServices.OrderMgmtReference.Order[] GetOrderList() {
            return base.Channel.GetOrderList();
        }
        
        public System.Threading.Tasks.Task<DomainWebServices.OrderMgmtReference.Order[]> GetOrderListAsync() {
            return base.Channel.GetOrderListAsync();
        }
        
        public DomainWebServices.OrderMgmtReference.Order[] GetUserOrderList(int user_id) {
            return base.Channel.GetUserOrderList(user_id);
        }
        
        public System.Threading.Tasks.Task<DomainWebServices.OrderMgmtReference.Order[]> GetUserOrderListAsync(int user_id) {
            return base.Channel.GetUserOrderListAsync(user_id);
        }
    }
}
